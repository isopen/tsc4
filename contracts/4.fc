{-
  TASK 4 - Caesar Cipher
  Implement a Caesar cipher encryption and decryption functions.
  The input is a string (https://docs.ton.org/develop/smart-contracts/guidelines/internal-messages#simple-message-with-comment)
  where the text is encrypted in a cell (after 32bit 00000000 prefix flag), the algorithm rotates the characters and the last ASCII
  character should go to the beginning. Return new text encoded in cell.
-}

() recv_internal() {
}

(cell) caesar_cipher_encrypt(int shift, cell text) method_id {
  slice string = text.begin_parse();
  string~load_uint(32);

  builder result = begin_cell();
  while (~ slice_data_empty?(string)) {
    result~store_uint(encrypt_char(string~load_uint(8), shift), 8);
  }
  return result.end_cell();
}

;; testable
(cell) caesar_cipher_decrypt(int shift, cell text) method_id {
  return begin_cell().end_cell();
}

